--- a/net/minecraft/world/level/block/IronBarsBlock.java
+++ b/net/minecraft/world/level/block/IronBarsBlock.java
@@ -51,10 +_,10 @@
         BlockState blockstate2 = blockgetter.getBlockState(blockpos3);
         BlockState blockstate3 = blockgetter.getBlockState(blockpos4);
         return this.defaultBlockState()
-            .setValue(NORTH, Boolean.valueOf(this.attachsTo(blockstate, blockstate.isFaceSturdy(blockgetter, blockpos1, Direction.SOUTH))))
-            .setValue(SOUTH, Boolean.valueOf(this.attachsTo(blockstate1, blockstate1.isFaceSturdy(blockgetter, blockpos2, Direction.NORTH))))
-            .setValue(WEST, Boolean.valueOf(this.attachsTo(blockstate2, blockstate2.isFaceSturdy(blockgetter, blockpos3, Direction.EAST))))
-            .setValue(EAST, Boolean.valueOf(this.attachsTo(blockstate3, blockstate3.isFaceSturdy(blockgetter, blockpos4, Direction.WEST))))
+            .setValue(NORTH, Boolean.valueOf(this.attachsTo(blockstate, blockstate.isFaceSturdy(blockgetter, blockpos1, Direction.SOUTH), Direction.SOUTH)))
+            .setValue(SOUTH, Boolean.valueOf(this.attachsTo(blockstate1, blockstate1.isFaceSturdy(blockgetter, blockpos2, Direction.NORTH), Direction.NORTH)))
+            .setValue(WEST, Boolean.valueOf(this.attachsTo(blockstate2, blockstate2.isFaceSturdy(blockgetter, blockpos3, Direction.EAST), Direction.EAST)))
+            .setValue(EAST, Boolean.valueOf(this.attachsTo(blockstate3, blockstate3.isFaceSturdy(blockgetter, blockpos4, Direction.WEST), Direction.WEST)))
             .setValue(WATERLOGGED, Boolean.valueOf(fluidstate.getType() == Fluids.WATER));
     }
 
@@ -67,7 +_,7 @@
         return p_54212_.getAxis().isHorizontal()
             ? p_54211_.setValue(
                 PROPERTY_BY_DIRECTION.get(p_54212_),
-                Boolean.valueOf(this.attachsTo(p_54213_, p_54213_.isFaceSturdy(p_54214_, p_54216_, p_54212_.getOpposite())))
+                Boolean.valueOf(this.attachsTo(p_54213_, p_54213_.isFaceSturdy(p_54214_, p_54216_, p_54212_.getOpposite()), p_54212_.getOpposite()))
             )
             : super.updateShape(p_54211_, p_54212_, p_54213_, p_54214_, p_54215_, p_54216_);
     }
@@ -92,6 +_,22 @@
         return super.skipRendering(p_54207_, p_54208_, p_54209_);
     }
 
+    /**
+     * Check whether this block can connect to the given side of the given neighboring block
+     *
+     * @param neighborState     The neighboring state
+     * @param neighborSideSolid Whether the side of the neighboring state being connected to is considered solid
+     * @param neighborFace      The side of the neighboring block being connected to
+     * @return Whether this block can connect to the given neighbor
+     */
+    public boolean attachsTo(BlockState neighborState, boolean neighborSideSolid, Direction neighborFace) {
+        return attachsTo(neighborState, neighborSideSolid);
+    }
+
+    /**
+     * @deprecated Use {@link #attachsTo(BlockState, boolean, Direction)} instead
+     */
+    @Deprecated
     public final boolean attachsTo(BlockState p_54218_, boolean p_54219_) {
         return !isExceptionForConnection(p_54218_) && p_54219_ || p_54218_.getBlock() instanceof IronBarsBlock || p_54218_.is(BlockTags.WALLS);
     }
